AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: personal-inventory-mngr

Globals:
  Function:
    Timeout: 25
    MemorySize: 128
    LoggingConfig:
      LogFormat: JSON

Resources:
  # API Gateway Definition
  PersonalInventoryApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: PersonalInventoryAPI
      StageName: Prod
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "Personal Inventory API"
          version: "1.0"
        paths:
          /get-all:
            get:
              x-amazon-apigateway-integration:
                type: aws
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAllFunction.Arn}/invocations"
                httpMethod: POST
                passthroughBehavior: "when_no_match"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'https://tycloudresume.com'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT'"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
            options:
              summary: "CORS support"
              responses:
                '200':
                  description: "CORS support"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                      default: "'tycloudresume.com'"
                    Access-Control-Allow-Methods:
                      type: string
                      default: "'OPTIONS,POST,GET,PUT'"
                    Access-Control-Allow-Headers:
                      type: string
                      default: "'Content-Type,Authorization'"
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: |
                    {
                      "statusCode": 200
                    }
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'https://tycloudresume.com'"
                      method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"

  # GET Lambda Function
  GetAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-all/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
      - Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ec2:DescribeInstances
              - s3:ListAllMyBuckets
              - s3:ListBuckets
              - dynamodb:ListTables
              - rds:DescribeDBInstances
              - cloudfront:ListDistributions
              - lambda:ListFunctions
              - elasticloadbalancing:DescribeLoadBalancers
              - vpc:DescribeVPCs
            Resource: "*"
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PersonalInventoryApi
            Path: /get-all
            Method: GET

  GetAllFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GetAllFunction.Arn
      Principal: apigateway.amazonaws.com
